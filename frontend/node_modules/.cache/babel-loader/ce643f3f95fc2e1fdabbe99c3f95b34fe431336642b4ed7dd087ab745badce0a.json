{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D4rkS\\\\desktop\\\\react\\\\react-router-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./Events.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { memo } from \"react\";\nimport EventList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  const allData = useSelector(state => state.dummyData.data);\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    async function fetchEvents() {\n      setIsLoading(true);\n      const response = await fetch(\"http://localhost:8080/events\");\n      if (!response.ok) {\n        setError(\"Fetching events failed.\");\n      } else {\n        const resData = await response.json();\n        setFetchedEvents(resData.events);\n      }\n      setIsLoading(false);\n    }\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.card,\n      children: [allData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/events/${data.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.url,\n              alt: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date : \", data.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), !isLoading && fetchedEvents && /*#__PURE__*/_jsxDEV(EventList, {\n          events: fetchedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fetchedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Events, \"bjcZkQ/LTn3df9fvNtsR3WSX0qc=\", false, function () {\n  return [useSelector];\n});\n_c = Events;\nexport default _c2 = /*#__PURE__*/memo(Events);\nvar _c, _c2;\n$RefreshReg$(_c, \"Events\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","Link","classes","useSelector","memo","EventList","Events","allData","state","dummyData","data","isLoading","setIsLoading","fetchedEvents","setFetchedEvents","error","setError","fetchEvents","response","fetch","ok","resData","json","events","card","map","id","url","title","date"],"sources":["C:/Users/D4rkS/desktop/react/react-router-project/frontend/src/pages/Events.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./Events.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { memo } from \"react\";\r\nimport EventList from \"../components/EventsList\";\r\n\r\nconst Events = () => {\r\n  const allData = useSelector((state) => state.dummyData.data);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fetchedEvents, setFetchedEvents] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchEvents() {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n      if (!response.ok) {\r\n        setError(\"Fetching events failed.\");\r\n      } else {\r\n        const resData = await response.json();\r\n        setFetchedEvents(resData.events);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ul className={classes.card}>\r\n        {allData.map((data) => (\r\n          <li key={data.id}>\r\n            <Link to={`/events/${data.id}`}>\r\n              <div>\r\n                <img src={data.url} alt=\"img\" />\r\n                <h3>{data.title}</h3>\r\n                <p>Date : {data.date}</p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n        <div>\r\n          {isLoading && <p>Loading..</p>}\r\n          {error && <p>{error}</p>}\r\n          {!isLoading && fetchedEvents && <EventList events={fetchedEvents} />}\r\n          <p>{fetchedEvents}</p>\r\n        </div>\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default memo(Events);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,OAAO;AAC5B,OAAOC,SAAS,MAAM,0BAA0B;AAAC;AAEjD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAMC,OAAO,GAAGJ,WAAW,CAAEK,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACC,IAAI,CAAC;EAE5D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,EAAE;EACpD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,EAAE;EAEpCC,SAAS,CAAC,MAAM;IACd,eAAeiB,WAAW,GAAG;MAC3BL,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChBJ,QAAQ,CAAC,yBAAyB,CAAC;MACrC,CAAC,MAAM;QACL,MAAMK,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QACrCR,gBAAgB,CAACO,OAAO,CAACE,MAAM,CAAC;MAClC;MACAX,YAAY,CAAC,KAAK,CAAC;IACrB;IAEAK,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACb;MAAI,SAAS,EAAEf,OAAO,CAACsB,IAAK;MAAA,WACzBjB,OAAO,CAACkB,GAAG,CAAEf,IAAI,iBAChB;QAAA,uBACE,QAAC,IAAI;UAAC,EAAE,EAAG,WAAUA,IAAI,CAACgB,EAAG,EAAE;UAAA,uBAC7B;YAAA,wBACE;cAAK,GAAG,EAAEhB,IAAI,CAACiB,GAAI;cAAC,GAAG,EAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAG,eAChC;cAAA,UAAKjB,IAAI,CAACkB;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eACrB;cAAA,WAAG,SAAO,EAAClB,IAAI,CAACmB,IAAI;YAAA;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACrB;UAAA;UAAA;UAAA;QAAA;MACD,GAPAnB,IAAI,CAACgB,EAAE;QAAA;QAAA;QAAA;MAAA,QASjB,CAAC,eACF;QAAA,WACGf,SAAS,iBAAI;UAAA,UAAG;QAAS;UAAA;UAAA;UAAA;QAAA,QAAI,EAC7BI,KAAK,iBAAI;UAAA,UAAIA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,EACvB,CAACJ,SAAS,IAAIE,aAAa,iBAAI,QAAC,SAAS;UAAC,MAAM,EAAEA;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG,eACpE;UAAA,UAAIA;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAClB;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACU;AAErB,CAAC;AAAC,GA/CIP,MAAM;EAAA,QACMH,WAAW;AAAA;AAAA,KADvBG,MAAM;AAiDZ,kCAAeF,IAAI,CAACE,MAAM,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}