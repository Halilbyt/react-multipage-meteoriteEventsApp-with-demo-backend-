{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst allData = async () => {\n  const fetchedData = [];\n  const response = await fetch(\"http://localhost:8080/events\");\n  const data = await response.json();\n  return data.events;\n};\nconst getData = createAsyncThunk(\"events/getData\", (args, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const {\n      data\n    } = axios(\"http://localhost:8080/events\");\n    return data;\n  } catch (error) {\n    rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  data: [],\n  loading: false,\n  message: \"\",\n  isSuccess: false\n};\nconst eventsSlice = createSlice({\n  name: \"events\",\n  initialState,\n  reducers: {\n    addEvent: (state, action) => {},\n    removeEvent: (state, action) => {},\n    editEvent: (state, action) => {},\n    extraReducer: {\n      [getData.pending]: (state, _ref2) => {\n        let {\n          payload\n        } = _ref2;\n        state.loading = true;\n      },\n      [getData.fulfilled]: (state, _ref3) => {\n        let {\n          payload\n        } = _ref3;\n        state.loading = false;\n        state.data = payload;\n        state.isSuccess = true;\n      },\n      [getData.rejected]: (state, _ref4) => {\n        let {\n          payload\n        } = _ref4;\n        state.loading = false;\n        state.message = \"Could not fetch the data from API\";\n        state.isSuccess = false;\n      }\n    }\n  }\n});\nexport const {\n  addEvent,\n  editEvent,\n  removeEvent\n} = eventsSlice.actions;\nexport default eventsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","allData","fetchedData","response","fetch","data","json","events","getData","args","rejectWithValue","error","initialState","loading","message","isSuccess","eventsSlice","name","reducers","addEvent","state","action","removeEvent","editEvent","extraReducer","pending","payload","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/D4rkS/desktop/react/react-router-project/frontend/src/store/eventReducer.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst allData = async () => {\r\n  const fetchedData = [];\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  const data = await response.json();\r\n  return data.events;\r\n};\r\n\r\nconst getData = createAsyncThunk(\r\n  \"events/getData\",\r\n  (args, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = axios(\"http://localhost:8080/events\");\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  message: \"\",\r\n  isSuccess: false,\r\n};\r\n\r\nconst eventsSlice = createSlice({\r\n  name: \"events\",\r\n  initialState,\r\n  reducers: {\r\n    addEvent: (state, action) => {},\r\n\r\n    removeEvent: (state, action) => {},\r\n\r\n    editEvent: (state, action) => {},\r\n    extraReducer: {\r\n      [getData.pending]: (state, { payload }) => {\r\n        state.loading = true;\r\n      },\r\n      [getData.fulfilled]: (state, { payload }) => {\r\n        state.loading = false;\r\n        state.data = payload;\r\n        state.isSuccess = true;\r\n      },\r\n      [getData.rejected]: (state, { payload }) => {\r\n        state.loading = false;\r\n        state.message = \"Could not fetch the data from API\";\r\n        state.isSuccess = false;\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addEvent, editEvent, removeEvent } = eventsSlice.actions;\r\n\r\nexport default eventsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,YAAY;EAC1B,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI,CAACE,MAAM;AACpB,CAAC;AAED,MAAMC,OAAO,GAAGV,gBAAgB,CAC9B,gBAAgB,EAChB,CAACW,IAAI,WAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACxB,IAAI;IACF,MAAM;MAAEL;IAAK,CAAC,GAAGL,KAAK,CAAC,8BAA8B,CAAC;IACtD,OAAOK,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdD,eAAe,CAACC,KAAK,CAACR,QAAQ,CAACE,IAAI,CAAC;EACtC;AACF,CAAC,CACF;AAED,MAAMO,YAAY,GAAG;EACnBP,IAAI,EAAE,EAAE;EACRQ,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,WAAW,GAAGjB,WAAW,CAAC;EAC9BkB,IAAI,EAAE,QAAQ;EACdL,YAAY;EACZM,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC;IAE/BC,WAAW,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC;IAElCE,SAAS,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC;IAChCG,YAAY,EAAE;MACZ,CAAChB,OAAO,CAACiB,OAAO,GAAG,CAACL,KAAK,YAAkB;QAAA,IAAhB;UAAEM;QAAQ,CAAC;QACpCN,KAAK,CAACP,OAAO,GAAG,IAAI;MACtB,CAAC;MACD,CAACL,OAAO,CAACmB,SAAS,GAAG,CAACP,KAAK,YAAkB;QAAA,IAAhB;UAAEM;QAAQ,CAAC;QACtCN,KAAK,CAACP,OAAO,GAAG,KAAK;QACrBO,KAAK,CAACf,IAAI,GAAGqB,OAAO;QACpBN,KAAK,CAACL,SAAS,GAAG,IAAI;MACxB,CAAC;MACD,CAACP,OAAO,CAACoB,QAAQ,GAAG,CAACR,KAAK,YAAkB;QAAA,IAAhB;UAAEM;QAAQ,CAAC;QACrCN,KAAK,CAACP,OAAO,GAAG,KAAK;QACrBO,KAAK,CAACN,OAAO,GAAG,mCAAmC;QACnDM,KAAK,CAACL,SAAS,GAAG,KAAK;MACzB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,QAAQ;EAAEI,SAAS;EAAED;AAAY,CAAC,GAAGN,WAAW,CAACa,OAAO;AAEvE,eAAeb,WAAW,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}